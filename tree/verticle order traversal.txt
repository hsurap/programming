/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void func(TreeNode* root,int no,unordered_map<int,vector<int>>&mymap)
    {
        if(root==NULL)
            return;
        mymap[no].push_back(root->val);
        func(root->left,no-1,mymap);
        func(root->right,no+1,mymap);
        return;
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) 
    {
        vector<vector<int>>v;
        unordered_map<int,vector<int>>mymap;
        func(root,0,mymap);
        unordered_map<int,vector<int>> :: iterator it;
        for(it=mymap.begin();it!=mymap.end();it++)
        {
            vector<int>ve;
            for(int i=0;i<it->second.size();i++)
            {
                ve.push_back((it->second)[i]);
            }
            v.push_back(ve);
        }
        return v;
    }
};