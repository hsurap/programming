// C++ program to evaluate value of a postfix expression

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution
{
    public:
    //Function to evaluate a postfix expression.
    int evaluatePostfix(string s)
    {
        stack<int>st;
        int i=0;
        while(i<s.size())
        {
            if((s[i]-'0')>=0 && (s[i]-'0')<=9)
            {
                st.push((s[i]-'0'));
            }
            else{
                if(s[i]=='+')
                {
                    int n1=st.top();st.pop();
                    int n2=st.top();st.pop();
                    st.push(n1+n2);
                }
                else if(s[i]=='-')
                {
                    int n1=st.top();st.pop();
                    int n2=st.top();st.pop();
                    st.push(n2-n1);
                }
                else if(s[i]=='*')
                {
                    int n1=st.top();st.pop();
                    int n2=st.top();st.pop();
                    st.push(n2*n1);
                }
                else{
                    int n1=st.top();st.pop();
                    int n2=st.top();st.pop();
                    st.push(n2/n1);
                }
            }
            i++;
        }
        return st.top();
        }
};

// { Driver Code Starts.

// Driver program to test above functions
int main()
{
    int t;
    cin>>t;
    cin.ignore(INT_MAX, '\n');
    while(t--)
    {
        string S;
        cin>>S;
        Solution obj;
    
    cout<<obj.evaluatePostfix(S)<<endl;
    }
    return 0;
}
  // } Driver Code Ends