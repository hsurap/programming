// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
// User function template for C++

class Solution{
    public:
    void func1(vector<vector<int>>&v,int n,vector<vector<int>>&visit,int row,int col,vector<string> &ans)
    {
        if(row==n-1 && col==n-1)
        {
            if(v[n-1][n-1]!=1)
                return;
            visit[n-1][n-1]=1;
            string s;
            int i=0,j=0;
            vector<vector<int>>newv=visit;
            while(i!=n-1 || j!=n-1)
            {
                newv[i][j]=0;
                if(i<n-1 && j<n && i>=0 && j>=0 && newv[i+1][j]==1)
                {
                    s+="D";
                    i++;
                }
                else if(i<n && j<n && i>=1 && j>=0 && newv[i-1][j]==1)
                {
                    s+="U";
                    i--;
                }
                else if(i<n && j<n-1 && i>=0 && j>=0 && newv[i][j+1]==1)
                {
                    s+="R";
                    j=j+1;
                }
                else if(i<n && j<n && i>=0 && j>=1 && newv[i][j-1]==1)
                {
                    s+="L";
                    j--;
                }
            }
            ans.push_back(s);
            return ;
        }
            
        if(row<0 || col<0 || row>=n || col>=n || v[row][col]==0 || visit[row][col]==1)
            return ;
        visit[row][col]=1;
        func1(v,n,visit,row+1,col,ans);
        func1(v,n,visit,row,col+1,ans); 
        func1(v,n,visit,row-1,col,ans);
        func1(v,n,visit,row,col-1,ans);
        visit[row][col]=0;
        return ;
    }
    
    void func(vector<vector<int>>&v,int n,vector<string> &ans)
    {
        vector<vector<int>>visit;
        for(int i=0;i<n;i++)
        {
            vector<int>sv;
            for(int j=0;j<n;j++)
            {
                sv.push_back(0);
            }
            visit.push_back(sv);
        }
        func1(v,n,visit,0,0,ans);
        return;
    }
    
    vector<string> findPath(vector<vector<int>> &v, int n)
    {
        vector<string> ans;
        func(v,n,ans);
        return ans;
    }
};

    


// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<vector<int>> m(n, vector<int> (n,0));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cin >> m[i][j];
            }
        }
        Solution obj;
        vector<string> result = obj.findPath(m, n);
        sort(result.begin(), result.end());
        if (result.size() == 0)
            cout << -1;
        else
            for (int i = 0; i < result.size(); i++) cout << result[i] << " ";
        cout << endl;
    }
    return 0;
}  // } Driver Code Ends