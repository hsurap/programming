#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main() {
	int r,c,no;
	cin>>r>>c>>no;
	vector<pair<int,pair<int,int>>> v;
	v.push_back(make_pair(r,make_pair(c,no)));
// 	cout<<v[0].first<<" "<<v[0].second.first<< " " <<v[0].second.second<<endl;
    int i=0;
    while(i<no)
    {
        int x,y,z;
        cin>>x>>y>>z;
        v.push_back(make_pair(x,make_pair(y,z)));
        i++;
    }
    // for(int i=0;i<v.size();i++)
    // {
    //     cout<<v[i].first<<" "<<v[i].second.first<< " " <<v[i].second.second<<endl;
    // }
    int p,q,s;
    cin>>p>>q>>s;
    vector<pair<int,pair<int,int>>> v1;
	v1.push_back(make_pair(p,make_pair(q,s)));
	i=0;
	while(i<s)
    {
        int x,y,z;
        cin>>x>>y>>z;
        v1.push_back(make_pair(x,make_pair(y,z)));
        i++;
    }
    // for(int i=0;i<v1.size();i++)
    // {
    //     cout<<v1[i].first<<" "<<v1[i].second.first<< " " <<v1[i].second.second<<endl;
    // }
    //Addition 
    vector<pair<int,pair<int,int>>> v3;
    // if(r==p && c==q && no==s)
    // {
        int m=1,n=1;
        while(m<v.size()&&n<v1.size())
        {
            if(v[m].first==v1[n].first && v[m].second.first == v1[n].second.first)
            {
                int sum=v[m].second.second+v1[n].second.second;
                if(sum!=0)
                {
                    v3.push_back(make_pair(v[m].first,make_pair(v[m].second.first,sum)));
                    m++;
                    n++;
                }
            }
            else if(v[m].first==v1[n].first && v[m].second.first != v1[n].second.first)
            {
                if(v[m].second.first < v1[n].second.first)
                {
                    v3.push_back(make_pair(v[m].first,make_pair(v[m].second.first,v[m].second.second)));
                    m++;
                }
                else{
                    v3.push_back(make_pair(v1[n].first,make_pair(v1[n].second.first,v1[n].second.second)));
                    n++;
                }
            }
            else{
                if(v[m].first < v1[n].first)
                {
                    v3.push_back(make_pair(v[m].first,make_pair(v[m].second.first,v[m].second.second)));
                    m++;
                }
                else{
                    v3.push_back(make_pair(v1[n].first,make_pair(v1[n].second.first,v1[n].second.second)));
                    n++;
                }
            }
        }
        while(m<v.size())
        {
            v3.push_back(make_pair(v[m].first,make_pair(v[m].second.first,v[m].second.second)));
            m++;
        }
        while(n<v1.size())
        {
            v3.push_back(make_pair(v1[n].first,make_pair(v1[n].second.first,v1[n].second.second)));
            n++;
        }
    v3.insert(v3.begin(),make_pair(r,make_pair(c,v3.size())) );
    for(int i=0;i<v3.size();i++)
    {
        cout<<v3[i].first<<" "<<v3[i].second.first<< " " <<v3[i].second.second<<endl;
    }
    //}
	return 0;
}