#include <iostream>
#include<bits/stdc++.h>
using namespace std;
class node{
    public:
    int val;
    node*next;
    
    node()
    {
        
    }
    node(int val)
    {
        this->val=val;
        next=NULL;
    }
};

node* making_linked_list()
{
    node*head=NULL;
    node*tail=NULL;
    int no;
    cin>>no;
    while(no!=-1)
    {
        node*newnode=new node(no);
        if(head==NULL)
        {
            head=newnode;
            tail=newnode;
        }
        else{
            tail->next=newnode;
            tail=tail->next;
        }
        cin>>no;
    }
    return head;
}

void making_intersect_linked_list(node*&head1,node*&head2)
{
    node*head3=making_linked_list();
    head1=making_linked_list();
    head2=making_linked_list();
    node*temp1=head1;
    node*temp2=head2;
    while(temp1->next!=NULL)
    {
        temp1=temp1->next;
    }
    while(temp2->next!=NULL)
    {
        temp2=temp2->next;
    }
    temp1->next=head3;
    temp2->next=head3;
}

void print(node*head)
{
    node*temp=head;
    while(temp!=NULL)
    {
        cout<<temp->val<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

int length(node*head)
{
    node*temp=head;
    int count=0;
    while(temp!=NULL)
    {
        count++;
        temp=temp->next;
    }
    return count;
}

int main()
{
	node*head1;
	node*head2;
	making_intersect_linked_list(head1,head2);
	print(head1);
	print(head2);
	int l1=length(head1);
	int l2=length(head2);
// 	cout<<l1<<" "<<l2<<endl;
	
	node*temp1;
	node*temp2;
	int step=0;
	if(l1>=l2){
	    step=l1-l2;
	    temp1=head1;
	    temp2=head2;
	}
	else{
	    step=l2-l1;
	    temp1=head2;
	    temp2=head1;
	}
	int count=0;
	while(temp1!=NULL && count<step)
	{
	    temp1=temp1->next;
	    count++;
	}
// 	cout<<temp1->val<<endl<<temp2->val<<endl;
	bool ans=true;
	while (temp1!=NULL && temp2!=NULL)
	{
	    if(temp1->next==temp2->next)
	    {
	        ans=false;
	        break;
	    }
	    temp1=temp1->next;
	    temp2=temp2->next;
	}
	if(ans==false)
	{
	    cout<<"element fount"<<" ";
	    cout<<temp1->next->val<<endl;
	}
	else{
	    cout<<"not found "<<endl;
	}
}
