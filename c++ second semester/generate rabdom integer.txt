#include <iostream>
#include<bits/stdc++.h>
using namespace std;

bool checkeven(vector<int>v)
{
    for(int i=0;i<v.size();i++)
    {
        if(v[i]%2==0)
            return true;
    }
    return false;
}

bool checknegetive(vector<int>v)
{
    for(int i=0;i<v.size();i++)
    {
        if(v[i]<0)
            return true;
    }
    return false;
}

void remove(vector<int> &v)
{
    unordered_map<int,int> my_map;
    for(int i=0;i<v.size();i++)
    {
        my_map[v[i]]++;
    }
    for(int i=0;i<v.size();i++)
    {
        if(my_map[v[i]]==1)
            continue;
        else{
            my_map[v[i]]--;
            v.erase(v.begin()+i);
        }
    }
}

vector<int> input(){
	int n;
	cin>>n;
	vector<int> useless(n);
	vector<int>v;
	for(auto &temp: useless) cin>>temp;
	queue<pair<int,int>> q;
	q.push({0,(n-1)/2});
	q.push({(n-1)/2,n-1});
	vector<int> arr(n,-1);
	arr[0]=1;
	if (n>1) arr[n-1]=2;
	if (n>2) arr[(n-1)/2]=3;
	int temp=4;
	while(q.size()){
		pair<int,int> p=q.front();
		q.pop();
		int mid=(p.first+p.second)/2;
		if (arr[mid]==-1){
			arr[mid]=temp;
			temp++;
			q.push({p.first,mid});
			q.push({mid,p.second});
		}
	}
    for(auto &trav: arr)
    {
    	v.push_back(useless[trav-1]);
    }
    return v;
}


int main() {
	
	vector<int>v;
	v=input();
// 	for(int i=0;i<v.size();i++)
// 	{
// 	    cout<<v[i]<<" ";
// 	}
// 	cout<<endl;
// 	for(int i=0;i<n;i++)
// 	{
// 	    cin>>v[i];
// 	}
    
    bool flag=true;
    while(checkeven(v))
    {
        if(flag==true)
        {
            int odd=-1,even=-1;
            for(int i=0;i<v.size();i++)
            {
                if(v[i]%2==0)
                {
                    even=i;
                    break;
                }
            }
            for(int i=0;i<v.size();i++)
            {
                if(v[i]%2!=0)
                {
                    odd=i;
                    break;
                }
            }
            v[max(odd,even)]=v[odd]+v[even];
            int m=min(odd,even);
            v.erase(v.begin()+m);
            flag=false;
        }
        else{
            int odd=-1,even=-1;
            for(int i=v.size()-1;i>=0;i--)
            {
                if(v[i]%2==0)
                {
                    even=i;
                    break;
                }
            }
            for(int i=v.size()-1;i>=0;i--)
            {
                if(v[i]%2!=0)
                {
                    odd=i;
                    break;
                }
            }
            v[min(odd,even)]=v[odd]+v[even];
            v.erase(v.begin()+max(odd,even));
            flag=true;
            
        }
    }
    flag=true;
    while(checknegetive(v))
    {
        if(flag==true)
        {
            int negetive=-1,positive=-1;
            for(int i=0;i<v.size();i++)
            {
                if(v[i]<0)
                {
                    negetive=i;
                    break;
                }
            }
            for(int i=0;i<v.size();i++)
            {
                if(v[i]>=0)
                {
                    positive=i;
                    break;
                }
            }
            v[max(negetive,positive)]=v[negetive]+v[positive];
            int m=min(negetive,positive);
            v.erase(v.begin()+m);
            flag=false;
        }
        else{
            int negetive=-1,positive=-1;
            for(int i=v.size()-1;i>=0;i--)
            {
                if(v[i]<0)
                {
                    negetive=i;
                    break;
                }
            }
            for(int i=v.size()-1;i>=0;i--)
            {
                if(v[i]>=0)
                {
                    positive=i;
                    break;
                }
            }
            v[min(negetive,positive)]=v[negetive]+v[positive];
            int m=max(negetive,positive);
            v.erase(v.begin()+m);
            flag=true;
        }
    }
	flag=true;
	while(checkeven(v))
    {
        if(flag==true)
        {
            int odd=-1,even=-1;
            for(int i=0;i<v.size();i++)
            {
                if(v[i]%2==0)
                {
                    even=i;
                    break;
                }
            }
            for(int i=0;i<v.size();i++)
            {
                if(v[i]%2!=0)
                {
                    odd=i;
                    break;
                }
            }
            v[max(odd,even)]=v[odd]+v[even];
            int m=min(odd,even);
            v.erase(v.begin()+m);
            flag=false;
        }
        else{
            int odd=-1,even=-1;
            for(int i=v.size()-1;i>=0;i--)
            {
                if(v[i]%2==0)
                {
                    even=i;
                    break;
                }
            }
            for(int i=v.size()-1;i>=0;i--)
            {
                if(v[i]%2!=0)
                {
                    odd=i;
                    break;
                }
            }
            v[min(odd,even)]=v[odd]+v[even];
            v.erase(v.begin()+max(odd,even));
            flag=true;
            
        }
    }
//     for(int i=0;i<v.size();i++)
// 	{
// 	    cout<<v[i]<<" ";
// 	}
// 	cout<<endl;
    remove(v);
    for(int i=0;i<v.size();i++)
	{
	    cout<<v[i]<<" ";
	}
    
}

