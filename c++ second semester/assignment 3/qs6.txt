#include <iostream>
using namespace std;

class node{
    public:
    int data;
    node*next;
    node(int data)
    {
        this->data=data;
        next=NULL;
    }
};

node*takeInput()
{
    int val;
    cin>>val;
    node*head=NULL;
    node*tail=NULL;
    while(val!=-1)
    {
        node*newnode = new node(val);
        if(head==NULL)
        {
            head=newnode;
            tail=newnode;
        }
        else{
            tail->next=newnode;
            tail=tail->next;
        }
        cin>>val;
    }
    tail->next=head;
    return head;

}

void print(node*head)
{
    if(head!=NULL)
        cout<<head->data<<" ";
    node*temp=head->next;
    while(temp!=head)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<temp->data;
}

int size(node*head)
{
    node *temp=head;
    int count=0;
    do{
        temp=temp->next;
        count++;
    }
    while(temp!=head);
    return count;
}

void split(node*head,node*&head1,node*&head2)
{
    if(head==NULL)
        return;
    if(head->next==head)
    {
        head1=head;
        return;
    }
    
    node*slow=head;
    node*fast=head;
    while(fast->next!= head&& fast->next->next!=head)
    {
        slow=slow->next;
        fast=fast->next->next;
    }
    node*temp=slow->next;
    head1=head;
    slow->next=head1;
    if(fast->next!=head)
        fast=fast->next;
    head2=temp;
    fast->next=temp;
    return;
}

int main()
{
    node*head=takeInput();
    // print(head);
    // cout<<size(head);
    node*head1=NULL;
    node*head2=NULL;
    print(head);
    split(head,head1,head2);
    cout<<endl;
    print(head1);
    cout<<endl;
    print(head2);
    return 0;
}