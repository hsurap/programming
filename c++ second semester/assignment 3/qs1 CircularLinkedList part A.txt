#include <iostream>
using namespace std;

class node{
    public:
    node*next;
    int data;
    node(int data)
    {
        this->data=data;
        next=NULL;
    }
};

int sizee(node*head)
{
    node* temp = head;
    int result = 0;
    if (head != NULL) {
        do {
            temp = temp->next;
            result++;
        } while (temp != head);
    }
 
    return result;
}

node*insertion_at_tailnode(node*head,int val)
{
    if(head==NULL)
    {
        node*newnode=new node(val);
        head=newnode;
        head->next=head;
        return head;
    }
    if(head->next==head)
    {
        node*newnode=new node(val);
        head->next=newnode;
        newnode->next=head;
        return head;
    }
    node*temp=head->next;
    while(temp->next!=head)
    {
        temp=temp->next;
    }
    node*newnode=new node(val);
    temp->next=newnode;
    newnode->next=head;
    return head;
}

node*insertion_at_headnode(node*head,int val)
{
    if(head==NULL)
    {
        node*newnode=new node(val);
        head=newnode;
        head->next=head;
        return head;
    }
    node*newnode=new node(val);
    newnode->next=head;
    node*temp=head;
    while (temp->next!=newnode->next)
    {
        temp=temp->next;
    }
    temp->next=newnode;
    head=newnode;
    return head;
}


node*insertion_at_particularPosition(node*head,int val,int pos)
{
    if(pos==0)
    {
        node*ans=insertion_at_headnode(head,val);
        return ans;
    }
    if(pos==sizee(head)-1)
    {
        node*ans=insertion_at_tailnode(head,val);
        return ans;
    }
    if(pos>sizee(head)-1 )
        return head;
    
    node*temp= head;
    int count=0;
    node*newnode=new node(val);
    while(count<pos-1)
    {
        temp=temp->next;
        count++;
    }
    newnode->next=temp->next;
    temp->next=newnode;
    return head;
    
}

void print(node*head)
{
    if(head!=NULL)
        cout<<head->data<<" ";
    node*temp=head->next;
    while(temp!=head)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<temp->data;
}

int main()
{
    node*head;
    head=insertion_at_headnode(head,1);
    head=insertion_at_headnode(head,2);
    head=insertion_at_headnode(head,3);
    head=insertion_at_headnode(head,4);
    head=insertion_at_headnode(head,5);
    head=insertion_at_tailnode(head,6);
    head=insertion_at_tailnode(head,7);
    head=insertion_at_tailnode(head,8);
    head=insertion_at_tailnode(head,9);
    head=insertion_at_particularPosition(head,100,0);
    head=insertion_at_particularPosition(head,200,9);
    head=insertion_at_particularPosition(head,786,2);
    head=insertion_at_particularPosition(head,687,6);
    print(head);
    cout<<endl;
    // cout<<sizee(head);
    return 0;
}
