#include <iostream>
using namespace std;

class node{
    public:
    int data;
    node*next;
    node(int data)
    {
        this->data=data;
        next=NULL;
    }
};

node*takeInput()
{
    int val;
    cin>>val;
    node*head=NULL;
    node*tail=NULL;
    while(val!=-1)
    {
        node*newnode = new node(val);
        if(head==NULL)
        {
            head=newnode;
            tail=newnode;
        }
        else{
            tail->next=newnode;
            tail=tail->next;
        }
        cin>>val;
    }
    tail->next=head;
    return head;

}

void print(node*head)
{
    if(head!=NULL)
        cout<<head->data<<" ";
    node*temp=head->next;
    while(temp!=head)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<temp->data;
}

int size(node*head)
{
    node *temp=head;
    int count=0;
    do{
        temp=temp->next;
        count++;
    }
    while(temp!=head);
    return count;
}

bool check(int no)
{
    int count=0;
    while(no>0)
    {
        count+=(no&1);
        no=no>>1;
    }
    if(count%2==0)
        return true;
    else
        return false;
}

node*removeEvenNode(node*head)
{
    if(head==NULL || (head->next==head && check(head->data)))
        return NULL;
    
    node*temp=head->next;
    node*prev=head;
    while(temp!=head)
    {
        
        if(check(temp->data))
        {
            prev->next=temp->next;
            delete temp;
            temp=prev->next;
        }
        else{
            prev=temp;
            temp=temp->next;
        }
    }
    if(check(head->data))
    {
        prev->next=head->next;
        delete head;
        head=prev->next;
    }
    return head;
}

int main()
{
    node*head=takeInput();
    print(head);
    cout<<endl;
    head=removeEvenNode(head);
    print(head);

    
}