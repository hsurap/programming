#include <iostream>
using namespace std;
template <typename T>
class stack{
    private:
    T *data;
    int next=0;
    int capacity;
    public:
    stack()
    {
        data=new T[4];
        next=0;
        capacity=4;
    }
    void push(T val)
    {
        if(next==capacity)
        {
            T *nedata=new T[2*capacity];
            for(int i=0;i<capacity;i++)
            {
                nedata[i]=data[i];
            }
            delete []data;
            data=nedata;
        }
        data[next]=val;
        next++;
    }
    T pop()
    {
        if(next==0)
        {
            return 0;
        }
        next--;
        return data[next];
    }
    T top()
    {
        if(next==0)
        {
            return 0;
        }
        return data[next-1];
    }
    int size()
    {
        return next;
    }
    bool empty()
    {
        return next==0;
    }
};


int main() {
    stack<int> s;
    s.push(10);
    s.push(20);
    cout<<s.size()<<endl;
    cout<<s.top()<<endl;
    s.push(30);
    cout<<s.pop()<<endl;
    cout<<s.size()<<endl;
    cout<<s.empty()<<endl;
}