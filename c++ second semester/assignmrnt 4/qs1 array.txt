#include <iostream>
#include<bits/stdc++.h>
using namespace std;

class stackUsingArray{
    private:
    int next_index;
    int *arr;
    int capacity;
    public:
    stackUsingArray()
    {
        arr=new int[5];
        next_index=0;
        capacity=5;
    }
    
    int top()
    {
        if(next_index==0)
        {
            cout<<"no element"<<endl;
            return -1;
        }
        return arr[next_index-1];
    }
    
    void display()
    {
        for(int i=0;i<next_index;i++)
        {
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
    
    bool isEmpty()
    {
        return next_index==0;
    }
    
    int currentSize()
    {
        return next_index;
    }
    
    void push(int element)
    {
        if(next_index==capacity)
        {
            int* new_array=new int[2*capacity];
            capacity=capacity*2;
            for(int i=0;i<next_index;i++)
            {
                new_array[i]=arr[i];
            }
            delete arr;
            arr=new_array;
        }
        arr[next_index]=element;
        next_index++;
    }
    
    int pop()
    {
        if(next_index==0)
        {
            cout<<"no element";
            return -1;
        }
        next_index--;
        return arr[next_index];
        
    }
    
};

int main() {
	stackUsingArray s;
// 	s.push(5);
// 	s.push(6);
// 	cout<<s.top()<<endl;
// 	s.push(4);
// 	cout<<s.top()<<endl;
// 	s.push(7);
// 	cout<<s.currentSize()<<endl;
// 	cout<<s.pop()<<endl;
// 	cout<<s.currentSize()<<endl;
    // cout<<s.pop()<<endl;
    // cout<<s.currentSize();
    s.push(5);
	s.push(6);
	s.push(7);
	s.push(8);
	s.push(9);
	s.push(10);
	s.push(11);
	s.push(12);
	cout<<s.currentSize()<<endl;
	s.display();
	return 0;
}