#include <iostream>
using namespace std;

class node{
   public:
   int data;
   node*next;
   node(int data)
   {
       this->data=data;
       next=NULL;
   }
};

class stackUsingLinkedList{
    node*head;
    int current_size;
    public:
    stackUsingLinkedList()
    {
        head=NULL;
        current_size=0;
    }
    
    int top()
    {
        if(head==NULL)
        {
            cout<<"empty stack"<<endl;
            return -1;
        }
        return head->data;
    }
    
    void display()
    {
        node*temp=head;
        while(temp!=NULL)
        {
             cout<<temp->data<<" ";
             temp=temp->next;
        }
        cout<<endl;
    }
    
    int size()
    {
        return current_size;
    }
    
    void push(int element)
    {
        node* newnode=new node(element);
        if(head==NULL)
        {
            head=newnode;
        }
        else{
            newnode->next=head;
            head=newnode;
        }
        current_size++;
    }
    
    int pop()
    {
        if(head==NULL)
        {
            cout<<" Empty stack"<<endl;
            return -1;
        }
        node*temp=head;
        head=head->next;
        delete temp;
        current_size--;
        return head->data;
    }
    
    bool isEmpty()
    {
        return head==NULL;
    }
};

int main() {
	stackUsingLinkedList s;
	s.push(2);
	s.push(3);
	s.push(4);
	s.push(5);
	cout<<s.size()<<endl;
	cout<<s.top()<<endl;
	s.pop();
	cout<<s.size()<<endl;
	cout<<s.top()<<endl;
	s.pop();
	cout<<s.size()<<endl;
	cout<<s.top()<<endl;
	s.display();
	return 0;
}