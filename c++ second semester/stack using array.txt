#include <iostream>
#include<bits/stdc++.h>
using namespace std;
class Stack{
    private:
    int *data;
    int next;
    int capacity;
    public:
    Stack()
    {
        data=new int(4);
        next=0;
        capacity=4;
    }
    void push(int value)
    {
        if(next==capacity)
        {
            int *nedata=new int[2*capacity];
            for(int i=0;i<capacity;i++)
            {
                nedata[i]=data[i];
            }
            delete []data;
            data=nedata;
        }
            data[next]=value;
            next++;
    }
    int pop()
    {
        if(next==0)
        {
            cout<<"stack is empty"<<endl;
            return INT_MAX;
        }
        else{
            next--;
            return data[next];
        }
    }
    int top()
    {
        if(next==0)
        {
            cout<<"stack is empty";
            return INT_MAX;
        }
        else{
            return data[next-1];
        }
    }
    int size()
    {
        return next;
    }
    bool empty()
    {
        return next==0;
    }
};
int main() {
	Stack s;
	s.push(10);
	s.push(20);
	s.push(30);
	cout<<s.pop()<<endl;;
	cout<<s.size()<<endl;
	s.push(50);
	s.push(60);
	s.push(50);
	cout<<s.size()<<endl;
	s.push(50);
	s.push(60);
	s.push(50);
	cout<<s.size()<<endl;
	cout<<s.empty()<<endl;
	return 0;
}