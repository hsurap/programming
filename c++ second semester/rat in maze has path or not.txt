#include <iostream>
using namespace std;
bool hasPath_helper(int**a,int**sol,int x,int y,int n)
{
    if(x==n-1 && y==n-1)
    {
        return true;
    }
    if(x<0 || y<0 || x>=n || y>=n || a[x][y]==0 || sol[x][y]==1)
    {
        return false;
    }
    sol[x][y]=1;
    if(hasPath_helper(a,sol,x+1,y,n))
        return true;
    if(hasPath_helper(a,sol,x-1,y,n))
        return true;
    if(hasPath_helper(a,sol,x,y+1,n))
        return true;
    if(hasPath_helper(a,sol,x,y-1,n))
        return false;
    sol[x][y];
    return false;
}
bool hasPath(int **a,int n)
{
    int **sol=new int*[n];
    for(int i=0;i<n;i++)
    {
        sol[i]=new int[n];
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            sol[i][j]=0;
        }
    }
    return hasPath_helper(a,sol,0,0,n);
}
int main() {
	int n;
	cin>>n;
	int **a=new int*[n];
    for(int i=0;i<n;i++)
    {
        a[i]=new int[n];
    }
	for(int i=0;i<n;i++)
	{
	    for(int j=0;j<n;j++)
	    {
	        cin>>a[i][j];
	    }
	}
	cout<<hasPath(a,n);
	return 0;
}