#include<iostream>
using namespace std;
class stack{
    int*data;
    int nextindex;
    int capacity;
    public:
    stack()
    {
        nextindex=0;
        capacity=5;
        data=new int[5];
    }
    bool isempty()
    {
        return nextindex==0;
    }
    int size()
    {
        return nextindex;
    }
    int top()
    {
        if(nextindex==0)
        {   cout<<"empty"<<endl;
            return 0;
        }
        return data[nextindex-1];
    }
    int pop()
    {
        if(nextindex==0)
        {   cout<<"empty"<<endl;
            return 0;
        }
        nextindex--;
        return data[nextindex];
    }
    void push(int element)
    {
        if(nextindex==capacity)
        {
            int*nedata=new int[2*capacity];
            for(int i=0;i<capacity;i++)
            {
                nedata[i]=data[i];
            }
            capacity=capacity*2;
            delete []data;
            data=nedata;
        }
        data[nextindex]=element;
        nextindex++;
    }
    
};
int main()
{
    stack s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.push(40);
    s.push(50);
    s.push(60);
    s.push(70);
    cout<<s.top()<<endl;
    cout<<s.pop()<<endl;
    cout<<s.size()<<endl;
}