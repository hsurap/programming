#include<bits/stdc++.h>
long long sumOfMaxAndMin(vector<int> &arr, int n, int k)
{
	long long ans=0;
    deque<int>dq1;
    deque<int>dq;
    for(int i=0;i<k;i++)
    {
        if(i==0)
        {
            dq.push_back(0);
            dq1.push_back(0);
        }   
        else
        {
            while(dq.size()!=0 && arr[dq.back()]<=arr[i])
            {
                dq.pop_back();
            }
            while(dq1.size()!=0 && arr[dq1.back()]>=arr[i])
            {
                dq1.pop_back();
            } 
            dq.push_back(i);
            dq1.push_back(i);
        }
    }
    ans+=(arr[dq.front()] + arr[dq1.front()]);
//     ans.push_back(arr[dq.front()] + arr[dq1.front()]);
    for(int i=k;i<n;i++)
    {
        if(dq.size()!=0 && dq.front()==(i-k))
            dq.pop_front();
        if(dq1.size()!=0 && dq1.front()==(i-k))
            dq1.pop_front();
        while(dq.size()!=0 && arr[dq.back()]<=arr[i])
            dq.pop_back();
        while(dq1.size()!=0 && arr[dq1.back()]>=arr[i])
            dq1.pop_back();
        dq.push_back(i);
        dq1.push_back(i);
        ans+=(arr[dq.front()] + arr[dq1.front()]);
//         ans.push_back(arr[dq.front()] + arr[dq1.front()]);
    }
    return ans;
}
